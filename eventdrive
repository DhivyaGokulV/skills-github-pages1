from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)

# Configure PostgreSQL database
app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://username:password@localhost/eventdrive_db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db = SQLAlchemy(app)

# Models
class EventDrive(db.Model):
    __tablename__ = 'event_drives'
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    description = db.Column(db.String(255))
    location = db.Column(db.String(100), nullable=False)
    date = db.Column(db.DateTime, nullable=False)

class Registration(db.Model):
    __tablename__ = 'registrations'
    id = db.Column(db.Integer, primary_key=True)
    user_name = db.Column(db.String(100), nullable=False)
    email = db.Column(db.String(100), nullable=False)
    event_id = db.Column(db.Integer, db.ForeignKey('event_drives.id'), nullable=False)
    event = db.relationship('EventDrive', backref=db.backref('registrations', lazy=True))

# Initialize the database (run once)
# db.create_all()

# Endpoint to create an event drive
@app.route('/create_event', methods=['POST'])
def create_event():
    data = request.get_json()
    try:
        new_event = EventDrive(
            name=data['name'],
            description=data.get('description'),
            location=data['location'],
            date=data['date']
        )
        db.session.add(new_event)
        db.session.commit()
        return jsonify({'message': 'Event created successfully!'}), 201
    except Exception as e:
        return jsonify({'error': str(e)}), 400

# Endpoint to register for an event
@app.route('/register', methods=['POST'])
def register():
    data = request.get_json()
    try:
        event = EventDrive.query.get(data['event_id'])
        if event is None:
            return jsonify({'error': 'Event not found'}), 404
        
        new_registration = Registration(
            user_name=data['user_name'],
            email=data['email'],
            event_id=data['event_id']
        )
        db.session.add(new_registration)
        db.session.commit()
        return jsonify({'message': 'Registered successfully!'}), 201
    except Exception as e:
        return jsonify({'error': str(e)}), 400

# Endpoint to get all events
@app.route('/events', methods=['GET'])
def get_events():
    events = EventDrive.query.all()
    events_list = [{
        'id': event.id
